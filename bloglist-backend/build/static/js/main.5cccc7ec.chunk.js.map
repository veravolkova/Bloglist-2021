{"version":3,"sources":["services/blogs.js","reducers/blogReducer.jsx","services/users.js","reducers/userReducer.jsx","reducers/notificationReducer.jsx","components/Button.js","components/Comment.js","components/Blog.js","components/Blogs.js","components/BlogForm.js","components/Footer.js","components/LoginForm.js","components/Menu.js","components/Notification.js","components/Togglable.js","components/User.js","components/Users.js","services/login.js","reducers/loginReducer.jsx","App.js","store.js","index.js"],"names":["baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","comment","console","log","remove","delete","setToken","newToken","initializeBlogs","dispatch","blogService","blogs","type","createBlog","newBlog","addLikes","blog","clickedBlog","likes","updatedBlog","addComment","commentObject","newComment","removeBlog","blogReducer","state","action","blogToLike","find","map","blogToComment","b","commentedBlog","comments","filter","initializeUsers","userService","users","userReducer","initialState","message","messageType","seconds","setNotification","timeout","setTimeout","hideNotification","notificationReducer","clearTimeout","Button","props","onClick","handleClick","color","text","Comment","commentText","useStyles","makeStyles","root","minWidth","marginTop","marginBottom","bullet","display","margin","transform","title","fontSize","pos","mapDispatchToProps","connect","blogVisible","useState","setCommentText","useDispatch","history","useHistory","classes","useEffect","loggedUser","useSelector","login","user","u","handleComment","event","preventDefault","error","blogMin","key","to","blogMax","Card","className","CardContent","Typography","variant","component","author","Link","href","url","CardActions","ButtonGroup","aria-label","blogObject","blogId","updateBlogEntry","exception","handleLikesIncr","window","confirm","push","handleRemove","TextField","label","value","name","onChange","target","TableContainer","Paper","Table","TableBody","sort","TableRow","TableCell","BlogForm","createBlogEntry","values","setValues","handleInputChange","e","onSubmit","Footer","style","fontStyle","backgroundColor","borderTop","textAlign","padding","position","left","bottom","height","width","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","flexGrow","Menu","handleLogout","AppBar","Toolbar","ConnectedNotification","notification","Alert","severity","Togglable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","match","useRouteMatch","params","length","table","TableHead","align","scope","credentials","loggedInUserJSON","JSON","parse","localStorage","getItem","loginService","loginReducer","logout","ConnectedApp","setUsername","setPassword","blogFormRef","createRef","loggedUserJSON","setItem","stringify","addBlogEntry","current","handleLogin","removeItem","Container","paddingBottom","path","exact","render","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5cccc7ec.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst comment = async (id, comment) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  console.log('service', comment)\n  const response = await axios.post(`${baseUrl}/${id}/comments`, comment, config)\n  return response.data\n}\n\nconst remove = (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const request = axios.delete(`${baseUrl}/${id}`, config)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, comment, remove, setToken }","import blogService from '../services/blogs'\r\n\r\nconst blogReducer = (state = [], action) => {\r\n\r\n  switch(action.type) {\r\n  case 'INIT_BLOGS':\r\n    return action.data\r\n  case 'NEW_BLOG':\r\n    return [...state, action.data]\r\n  case 'ADD_LIKE': {\r\n    const id = action.data.id\r\n    const blogToLike = state.find(blog => blog.id === id)\r\n    const clickedBlog = {\r\n      ...blogToLike,\r\n      likes: blogToLike.likes + 1\r\n    }\r\n    return state.map(blog =>\r\n      blog.id !== id ? blog : clickedBlog\r\n    )}\r\n  case 'ADD_COMMENT': {\r\n    const newComment = action.data.newComment\r\n    const blogToComment = state\r\n      .find(b => b.id === action.data.blog.id)\r\n\r\n    const commentedBlog = {\r\n      ...blogToComment,\r\n      comments: [...blogToComment.comments, newComment],\r\n    }\r\n    return state.map(b => (b.id === commentedBlog.id ? commentedBlog : b))\r\n  }\r\n  case 'DELETE_BLOG': {\r\n    const id = action.data\r\n    return state.filter((blog) => blog.id !== id)\r\n  }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n  return async dispatch => {\r\n    const blogs = await blogService.getAll()\r\n    dispatch({\r\n      type: 'INIT_BLOGS',\r\n      data: blogs,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createBlog = (data) => {\r\n  return async dispatch => {\r\n    const newBlog = await blogService.create(data)\r\n\r\n    dispatch({\r\n      type: 'NEW_BLOG',\r\n      data: newBlog,\r\n    })\r\n  }\r\n}\r\n\r\nexport const addLikes = (id, blog) => {\r\n  return async dispatch => {\r\n    const clickedBlog = {\r\n      ...blog,\r\n      likes: blog.likes + 1\r\n    }\r\n    const updatedBlog = await blogService.update(id, clickedBlog)\r\n    dispatch({\r\n      type: 'ADD_LIKE',\r\n      data: updatedBlog,\r\n    })\r\n  }\r\n}\r\n\r\nexport const addComment = (blog, commentObject) => {\r\n  return async dispatch => {\r\n    const newComment = await blogService.comment(\r\n      blog.id,\r\n      commentObject\r\n    )\r\n    dispatch({\r\n      type: 'ADD_COMMENT',\r\n      data: { newComment, blog }\r\n    })\r\n  }\r\n}\r\n\r\nexport const removeBlog = (id) => {\r\n  return async (dispatch) => {\r\n    await blogService.remove(id)\r\n    dispatch({\r\n      type: 'DELETE_BLOG',\r\n      data: { id },\r\n    })\r\n  }\r\n}\r\n\r\nexport default blogReducer\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll }","import userService from '../services/users'\r\n\r\nconst userReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case 'INIT_USERS':\r\n    return action.data\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const initializeUsers = () => {\r\n  return async (dispatch) => {\r\n    const users = await userService.getAll()\r\n    dispatch({\r\n      type: 'INIT_USERS',\r\n      data: users,\r\n    })\r\n  }\r\n}\r\n\r\nexport default userReducer","const initialState = {\r\n  message: '',\r\n  messageType: '',\r\n  seconds: 0,\r\n}\r\n\r\nconst notificationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n  case 'SET_NOTIFICATION':\r\n    clearTimeout(state.timeout)\r\n    console.log(action.type)\r\n    return action.data\r\n  case 'HIDE_NOTIFICATION':\r\n    return initialState\r\n\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const setNotification = (message, messageType, seconds) => {\r\n  console.log(message)\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'SET_NOTIFICATION',\r\n      data: {\r\n        message,\r\n        messageType,\r\n        timeout: setTimeout(() => {\r\n          dispatch(hideNotification())\r\n        }, seconds*1000)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const hideNotification = () => {\r\n  return {\r\n    type: 'HIDE_NOTIFICATION',\r\n  }\r\n}\r\n\r\nexport default notificationReducer\r\n","import React from 'react'\r\nimport { Button as ButtomMUI } from '@material-ui/core'\r\n\r\nexport default function Button(props) {\r\n  return (\r\n    <ButtomMUI onClick={props.handleClick} color={props.color}>\r\n      {props.text}\r\n    </ButtomMUI>\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst Comment = props => {\r\n  const comment = props.comment.commentText\r\n\r\n  if (!props.comment) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {comment}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Comment","import React, { useState, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { ButtonGroup, TextField, Link as LinkMUI } from '@material-ui/core'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport {\r\n  addComment,\r\n  addLikes,\r\n  removeBlog,\r\n  initializeBlogs,\r\n} from '../reducers/blogReducer'\r\n\r\nimport { initializeUsers } from '../reducers/userReducer'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\n\r\nimport Button from './Button'\r\nimport Comment from './Comment'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    marginTop: 25,\r\n    marginBottom: 25,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n})\r\n\r\nconst Blog = ({ blog, users, blogVisible, setNotification }) => {\r\n\r\n  const [commentText, setCommentText] = useState('')\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const classes = useStyles()\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeBlogs())\r\n    dispatch(initializeUsers())\r\n  }, [dispatch])\r\n\r\n  const loggedUser = useSelector((state) => state.login)\r\n  const user = users.find((u) => u.id === loggedUser.id)\r\n\r\n  if (!blog || !user) {\r\n    return null\r\n  }\r\n\r\n  const handleLikesIncr = (blogObject) => {\r\n    try {\r\n      const blogId = blogObject.id\r\n      const updateBlogEntry = {\r\n        title: blogObject.title,\r\n        author: blogObject.author,\r\n        url: blogObject.url,\r\n        user: blogObject.user.id,\r\n        likes: blogObject.likes + 1\r\n      }\r\n\r\n      dispatch(addLikes(blogId, updateBlogEntry))\r\n      setNotification(`Number of likes for entry ${blogObject.title} was updated`, 'success', 5)\r\n    }\r\n    catch (exception) {\r\n      setNotification('Smth went wrong', 'error', 5)\r\n    }\r\n  }\r\n\r\n  const handleLikes = (event) => {\r\n    event.preventDefault()\r\n    handleLikesIncr(blog)\r\n  }\r\n\r\n  const handleComment = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      const comment = { commentText }\r\n      dispatch(addComment(blog, comment))\r\n      setCommentText('')\r\n    }\r\n    catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  const handleRemove = (blogObject) => {\r\n    if (window.confirm(`Delete ${blogObject.title}?`)) {\r\n      try {\r\n        dispatch(removeBlog(blogObject.id))\r\n        setNotification(`Entry ${blogObject.title} was removed`, 'success', 5)\r\n        history.push('/blogs')\r\n      } catch (error) {\r\n        setNotification(`Entry '${blogObject.title}' can't be removed from server. Unauthorized`, 'error', 5)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleDelete = (event) => {\r\n    event.preventDefault()\r\n    handleRemove(blog)\r\n  }\r\n\r\n  const blogMin = (\r\n    <>\r\n      <Link  key={blog.id}  to={`/blogs/${blog.id}`}>{blog.title}</Link><br/>\r\n    </>\r\n  )\r\n\r\n  const blogMax = (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            {blog.title}\r\n          </Typography>\r\n          <Typography className={classes.pos} color=\"textSecondary\">\r\n            {blog.author}\r\n          </Typography>\r\n          <LinkMUI href={blog.url}>\r\n            {blog.url}\r\n          </LinkMUI>\r\n          <Typography></Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            {blog.likes} likes\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n            <Button handleClick={handleLikes} text='like' /><br/>\r\n            { user.blogs.find(b => b.id === blog.id) ?\r\n              <Button handleClick={handleDelete} text='remove blog' color=\"secondary\"/>\r\n              : null\r\n            }\r\n          </ButtonGroup>\r\n        </CardActions>\r\n      </Card>\r\n\r\n      <Typography variant=\"h5\" component=\"h2\">\r\n        Add comment:\r\n      </Typography>\r\n      <TextField\r\n        label='comment'\r\n        type='text'\r\n        value={commentText}\r\n        name='commentText'\r\n        onChange={({ target }) => setCommentText(target.value)}\r\n      />\r\n      <Button text='comment' handleClick={handleComment}/>\r\n\r\n      {blog.comments && (\r\n        <ul>\r\n          {blog.comments.map(comment => {\r\n            return (\r\n              <li key={comment.id}>\r\n                <Comment comment={comment} />\r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n      )}\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <div id='blog'>\r\n      { blogVisible ?\r\n        <div className=\"maxDetails\">\r\n          {blogMax}\r\n        </div>\r\n        :\r\n        <div className=\"minDetails\">\r\n          {blogMin}\r\n        </div>\r\n      }\r\n    </div>\r\n  )}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.users,\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  initializeUsers,\r\n  initializeBlogs,\r\n  setNotification,\r\n  removeBlog,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Blog)\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Blog from './Blog'\r\n\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Paper,\r\n} from '@material-ui/core'\r\n\r\nconst Blogs = ( props ) => {\r\n  return (\r\n    <div>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableBody>\r\n            {props.blogs\r\n              .sort((a, b) => a.likes < b.likes ? 1 : -1)\r\n              .map(blog => (\r\n                <TableRow key={blog.id}>\r\n                  <TableCell>\r\n                    <Blog blog={blog} blogVisible={false}/>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    blogs: state.blogs\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(Blogs)\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n  Button,\r\n  TextField,\r\n} from '@material-ui/core'\r\n\r\nconst BlogForm = ({ createBlogEntry }) => {\r\n\r\n  const [values, setValues] = useState({ title: '', author: '', url: '' })\r\n  const history = useHistory()\r\n\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.target\r\n    setValues({ ...values, [name]: value })\r\n  }\r\n\r\n  const addBlogEntry = (event) => {\r\n    event.preventDefault()\r\n    createBlogEntry({\r\n      title: values.title,\r\n      author: values.author,\r\n      url: values.url,\r\n    })\r\n    history.push('/blogs')\r\n    //console.log(values.title)\r\n    setValues({ title: '', author: '', url: '' })\r\n  }\r\n\r\n  return (\r\n    <div className=\"formDiv\">\r\n      <h4>Create a new entry</h4>\r\n      <form onSubmit={addBlogEntry}>\r\n        <div>\r\n          <TextField\r\n            label='title'\r\n            type='text'\r\n            id='title'\r\n            value={values.title}\r\n            name='title'\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            label='author'\r\n            type='text'\r\n            id='author'\r\n            value={values.author}\r\n            name='author'\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            label='url'\r\n            type='text'\r\n            id='url'\r\n            value={values.url}\r\n            name='url'\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <Button type=\"submit\">save</Button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogForm\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'grey',\r\n    fontStyle: 'italic',\r\n    fontSize: 16,\r\n    backgroundColor: '#F8F8F8',\r\n    borderTop: '1px solid #E7E7E7',\r\n    textAlign: 'center',\r\n    padding: '20px',\r\n    position: 'fixed',\r\n    left: '0',\r\n    bottom: '0',\r\n    height: '60px',\r\n    width: '100%',\r\n  }\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Blog app, Vera Popova 2020</em>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Button,\r\n  TextField,\r\n} from '@material-ui/core'\r\n\r\nconst LoginForm = ({\r\n  handleSubmit,\r\n  handleUsernameChange,\r\n  handlePasswordChange,\r\n  username,\r\n  password\r\n}) => {\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <TextField\r\n            label='username'\r\n            id='username'\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            label='password'\r\n            id='password'\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </div>\r\n        <Button type=\"submit\" id=\"login-button\">login</Button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  handleUsernameChange: PropTypes.func.isRequired,\r\n  handlePasswordChange: PropTypes.func.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  password: PropTypes.string.isRequired\r\n}\r\n\r\nexport default LoginForm","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Button, Toolbar, AppBar } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}))\r\n\r\nconst Menu = ({ user, handleLogout }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='static'>\r\n        <Toolbar>\r\n          <Button color=\"inherit\" component={Link} to=\"/\">\r\n      home\r\n          </Button>\r\n          <Button color=\"inherit\" component={Link} to=\"/blogs\">\r\n      blogs\r\n          </Button>\r\n          <Button color=\"inherit\" component={Link} to=\"/create\">\r\n      create\r\n          </Button>\r\n          <Button color=\"inherit\" component={Link} to=\"/users\">\r\n      users\r\n          </Button>\r\n          {user?\r\n            <Button color=\"inherit\"  component={Link} to=\"/logout\" onClick={handleLogout}>\r\n      logout\r\n            </Button>\r\n            :\r\n            <Button color=\"inherit\" component={Link} to=\"/login\">\r\n      login\r\n            </Button>\r\n          }\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\n\r\nconst Notification = ( props ) => {\r\n\r\n  return (\r\n    <Alert severity={props.notification.messageType}>\r\n      {props.notification.message}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ( state ) => {\r\n  return {\r\n    notification: state.notification\r\n  }\r\n}\r\n\r\nconst ConnectedNotification = connect(\r\n  mapStateToProps,\r\n  null\r\n)(Notification)\r\n\r\nexport default ConnectedNotification\r\n\r\n\r\n\r\n\r\n","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button as ButtonMUI } from '@material-ui/core'\r\n\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  Togglable.propTypes = {\r\n    buttonLabel: PropTypes.string.isRequired\r\n  }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <ButtonMUI onClick={toggleVisibility}>{props.buttonLabel}</ButtonMUI>\r\n      </div>\r\n      <div style={showWhenVisible} className=\"togglableContent\">\r\n        {props.children}\r\n        <ButtonMUI onClick={toggleVisibility}>cancel</ButtonMUI>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.displayName = 'Togglable'\r\n\r\nexport default Togglable","import React, { useEffect, }  from 'react'\r\nimport { useRouteMatch } from 'react-router-dom'\r\nimport { connect, useDispatch, } from 'react-redux'\r\n\r\nimport { initializeUsers } from '../reducers/userReducer'\r\nimport Blog from './Blog'\r\n\r\n\r\nconst User = props => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeUsers())\r\n  }, [dispatch])\r\n\r\n  const match = useRouteMatch('/users/:id')\r\n  const user = match ? props.users.find((user) => user.id === match.params.id) : null\r\n\r\n  if (!user) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{user.name} blogs:</h2>\r\n      {user.blogs.length === 0 ? (\r\n        <h3>User has no blogs yet</h3>\r\n      ) : (\r\n        <ul>\r\n          {user.blogs.map(blog => {\r\n            return (\r\n              <>\r\n                <li key={blog.id}> <Blog blog={blog} /></li>\r\n                <br/>\r\n              </>\r\n            )\r\n          })}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.users\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  initializeUsers,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(User)","import React, { useEffect, }  from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect, useDispatch, } from 'react-redux'\r\n\r\nimport { initializeUsers } from '../reducers/userReducer'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 350,\r\n  },\r\n})\r\n\r\nconst Users = props => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeUsers())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Users</TableCell>\r\n            <TableCell align=\"left\">Blogs created</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.users.map((user) => (\r\n            <TableRow key={user.id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <Link to={`/users/${user.id}`}>{user.username}</Link>\r\n              </TableCell>\r\n              <TableCell align=\"left\">{user.blogs.length}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.users\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  initializeUsers\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Users)\r\n\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import loginService from '../services/login'\r\n\r\nconst loggedInUserJSON = JSON.parse(\r\n  window.localStorage.getItem('loggedBlogappUser'),\r\n)\r\n\r\nconst initialState = loggedInUserJSON ? loggedInUserJSON : null\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n  case 'LOGIN':\r\n    return action.data\r\n  case 'LOGOUT': {\r\n    return null\r\n  }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const login = (username, password) => {\r\n  return async (dispatch) => {\r\n    const user = await loginService.login({ username, password })\r\n    dispatch({\r\n      type: 'LOGIN',\r\n      data: user,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => {\r\n  return {\r\n    type: 'LOGOUT',\r\n  }\r\n}\r\n\r\n\r\nexport default loginReducer","import React, { useState, useEffect } from 'react'\nimport {\n  connect,\n  useDispatch,\n  useSelector,\n} from 'react-redux'\n\nimport {\n  Switch,\n  Route,\n  useHistory,\n} from 'react-router-dom'\n\nimport Blog from './components/Blog'\nimport Blogs from './components/Blogs'\nimport BlogForm from './components/BlogForm'\nimport Footer from './components/Footer'\nimport LoginForm from './components/LoginForm'\nimport Menu from './components/Menu'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport User from './components/User'\nimport Users from './components/Users'\n\nimport blogService from './services/blogs'\n\nimport {\n  initializeBlogs,\n  createBlog,\n  removeBlog,\n  addLikes\n} from './reducers/blogReducer'\n\nimport { login, logout } from './reducers/loginReducer'\nimport { setNotification } from './reducers/notificationReducer'\nimport { initializeUsers } from './reducers/userReducer'\n\nimport {\n  Container,\n  Typography,\n} from '@material-ui/core'\n\n\nconst App = (props) => {\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const blogFormRef = React.createRef()\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const user = useSelector((state) => state.login)\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n    dispatch(initializeUsers())\n  }, [dispatch])\n\n  useEffect(() => {\n    const loggedUserJSON = JSON.parse(window.localStorage.getItem('loggedBlogappUser'))\n    if (loggedUserJSON) {\n      blogService.setToken(loggedUserJSON.token)\n    }\n  }, [])\n\n  useEffect(() => {\n    window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user))\n    if (user) {\n      blogService.setToken(user.token)\n    }\n  }, [user])\n\n  const addBlogEntry = (blogObject) => {\n    try {\n      blogFormRef.current.toggleVisibility()\n      dispatch(createBlog(blogObject))\n      props.setNotification(`Entry ${blogObject.title} was creaated`, 'success', 5)\n    }\n    catch (exception) {\n      console.error(exception)\n      props.setNotification('Smth went wrong', 'error', 5)\n    }\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    const loggedInUser = JSON.parse(window.localStorage.getItem('loggedBlogappUser'))\n\n    if (!loggedInUser) {\n      try {\n        const user = dispatch(login(username, password))\n        window.localStorage.setItem(\n          'loggedBlogappUser', JSON.stringify(user)\n        )\n        blogService.setToken(user.token)\n      } catch (exception) {\n        props.setNotification('Wrong credentials', 'error', 5)\n      }\n    }\n  }\n\n  const handleLogout = async (event) => {\n    event.preventDefault()\n    try {\n      window.localStorage.removeItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      props.logout()\n      history.push('/login')\n    } catch (exception) {\n      props.setNotification('Log out error', 'error', 5)\n    }\n  }\n\n  const loginForm = () => (\n    // <Togglable buttonLabel='Login Form'>\n    <LoginForm\n      username={username}\n      password={password}\n      handleUsernameChange={({ target }) => setUsername(target.value)}\n      handlePasswordChange={({ target }) => setPassword(target.value)}\n      handleSubmit={handleLogin}\n    />\n    // </Togglable>\n  )\n\n  const blogForm = () => (\n    <Togglable buttonLabel='new blog entry' ref={blogFormRef}>\n      <BlogForm\n        createBlogEntry={addBlogEntry}\n      />\n    </Togglable>\n  )\n\n  return (\n    <Container>\n      <div style={{ paddingBottom:'80px' }}>\n        <Notification />\n        <Menu user={user} handleLogout={handleLogout} />\n        <Switch>\n          {user === null ?\n            <Route path='/login'>\n              {loginForm()}\n            </Route> :\n            <>\n              <Typography variant='h3'>Blogs</Typography>\n              <Typography variant='h5'>{user.name} logged in</Typography>\n\n              <Route path='/logout'>\n              </Route>\n\n              <Route path='/create'>\n                {blogForm()}\n              </Route>\n\n              <Route exact path='/blogs'>\n                <Blogs />\n              </Route>\n\n              <Route path=\"/blogs/:id\" render={({ match }) =>\n                (\n                  <Blog blog={props.blogs.find(blog => blog.id === match.params.id)}\n                    blogVisible={true} />\n                )\n              }\n              />\n\n              <Route exact path='/users' render={() => <Users />} />\n              <Route path=\"/users/:id\" render={() => <User />} />\n\n            </>\n          }\n        </Switch>\n      </div>\n      <Footer />\n    </Container>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    blogs: state.blogs,\n    users: state.users,\n  }\n}\n\nconst mapDispatchToProps = {\n  setNotification,\n  initializeBlogs,\n  initializeUsers,\n  createBlog,\n  removeBlog,\n  addLikes,\n  login,\n  logout\n}\n\nconst ConnectedApp = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n\nexport default ConnectedApp\n\n\n\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport blogReducer from './reducers/blogReducer'\r\nimport userReducer from './reducers/userReducer'\r\nimport loginReducer from './reducers/loginReducer'\r\n\r\nconst reducer = combineReducers({\r\n  blogs: blogReducer,\r\n  users: userReducer,\r\n  notification: notificationReducer,\r\n  login: loginReducer,\r\n})\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\nexport default store\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\nimport store from './store'\n\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n)"],"sourceRoot":""}